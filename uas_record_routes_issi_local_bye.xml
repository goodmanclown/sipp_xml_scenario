<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uas' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic UAS responder">
  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv request="INVITE" crlf="true" rrs="true">
  </recv>

  <!-- The '[last_*]' keyword is replaced automatically by the          -->
  <!-- specified header if it was present in the last message received  -->
  <!-- (except if it was a retransmission). If the header was not       -->
  <!-- present or if no message has been received, the '[last_*]'       -->
  <!-- keyword is discarded, and all bytes until the end of the line    -->
  <!-- are also discarded.                                              -->
  <!--                                                                  -->
  <!-- If the specified header was present several times in the         -->
  <!-- message, all occurences are concatenated (CRLF seperated)        -->
  <!-- to be used in place of the '[last_*]' keyword.                   -->

  <send retrans="500">
    <![CDATA[

      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid][call_number]
      [last_Call-ID:]
      [last_CSeq:]
      [last_Record-Route:]
      [last_Contact:]
      Allow: ACK,BYE,CANCEL,INVITE,OPTIONS,REGISTER,MESSAGE
      MIME-Version: 1.0
      Content-Type: multipart/mixed;boundary="P25 ISSI body boundary"
      Content-Disposition: session;handling=required
      Content-Length: [len]

      --P25 ISSI body boundary
      Content-Type: application/sdp
      Content-Disposition: session;handling=required

      v=0
      o=- 776390491 776390491 IN IP[local_ip_type] [local_ip]
      s=TIA-P25-Groupcall
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 101
      a=rtpmap:101 X-TIA-P25-HalfRate/8000

      --P25 ISSI body boundary
      Content-Type: application/x-tia-p25-issi
      Content-Disposition: session;handling=required

      c-resavail:1
      c-groupcalltype:1
      c-protected:0

      --P25 ISSI body boundary--
    ]]>
  </send>



  <recv request="ACK"
        rtd="true"
        crlf="true">
	<action>
	    <ereg regexp=".*" search_in="hdr" header="From:" case_indep="true" assign_to="fr_hdr"/>
	    <ereg regexp=".*" search_in="hdr" header="To:" case_indep="true" assign_to="to_hdr"/>
	</action>
  </recv>

  <nop>
    <!--action>
       <exec play_pcap_audio="../pcap/g711a.pcap"/>
    </action-->
  </nop>

  <!-- This delay can be customized by the -d command-line option       -->
  <!-- or by adding a 'milliseconds = "value"' option here.             -->
  <!-- pause distribution="uniform" min="4000" max="46000"/-->
  <pause milliseconds="8000"/>

  <!-- The 'crlf' option inserts a blank line in the statistics report. -->
  <send retrans="500">
    <![CDATA[

      BYE [next_url] SIP/2.0
      Via: SIP/2.0/[transport] 01.747.AB999.p25dr;branch=[branch]
      From: [$to_hdr]
      To: [$fr_hdr]
      [last_Call-ID:]
      CSeq: 1 BYE
      Max-Forwards: 70
      Content-Length: 0

    ]]>
  </send>

  <recv response="100"
        optional="true">
  </recv>

  <recv response="200" crlf="true">
  </recv>


  <!-- Keep the call open for a while in case the 200 is lost to be     -->
  <!-- able to retransmit it if we receive the BYE again.               -->
  <pause milliseconds="4000"/>


  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>

